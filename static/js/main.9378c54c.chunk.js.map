{"version":3,"sources":["Constants/homeConstants.js","Reducers/homeReducer.js","Constants/todoConstants.js","Reducers/todoReducer.js","Constants/postConstants.js","Reducers/postReducer.js","Constants/galleryConstants.js","Reducers/galleryReducer.js","Reducers/index.js","Store/configureStore.js","Containers/Layout/Header.js","Containers/Layout/Layout.js","Styles/images/user_icon.png","Components/UserTarget.js","Containers/Home/Home.js","Services/service.js","Services/callsConstants.js","Services/servicesCalls/servicesCalls.js","Actions/homeAction.js","Containers/Home/index.js","Components/Checkbox.js","Components/UserTodo.js","Components/PostLabel.js","utils/lookInArray.js","Components/UserGallery.js","Styles/images/user_icon_2.png","Components/Modal/AnswerComment.js","Components/Modal/ModalPost.js","Components/Modal/ModalPhoto.js","utils/modalStyle.js","Containers/User/User.js","Actions/todoAction.js","Actions/postsAction.js","Actions/galleryAction.js","Containers/User/index.js","App.js","index.js"],"names":["FETCH_USERS","FETCH_USER_INFO","setUsersData","state","usersData","setUserInfo","userInfo","setTodoInfo","todoInfo","setUserPost","userPosts","setComments","comments","setGalleryAlbums","galleryAlbums","setAllPhotos","allPhotos","reducer","combineReducers","homeReducer","action","type","todoReducer","postReducer","galleryReducer","createStoreWithMiddleware","compose","applyMiddleware","thunk","createStore","Header","props","handleClick","setState","menu","render","className","href","React","Component","Layout","children","UserTarget","detailed","src","userIcon","name","email","phone","web","id","Home","componentDidMount","fetchUsersData","map","user","executeServiceCall","actionURL","axios","method","url","then","response","data","PATH","PATH_POSTS","PATH_COMMENTS","PATH_ALBUMS","PATH_PHOTOS","PATH_TODOS","PATH_USERS","getAlbums","callback","paths","getUsers","dispatch","fetchUserInfo","result","find","saveUserInfo","connect","ownProps","Checkbox","checked","isCompleted","onChange","onClick","text","completed","UserTodo","todoList","todo","title","PostLabel","content","getCommentsById","array","postId","filter","commentItem","getPhotosById","albumId","photoItem","UserGallery","handlePhotoList","photos","val","parseInt","target","value","list","galleryName","thumbnailUrl","prevProps","this","AnswerComment","message","mail","ModalPost","active","body","photoSelected","modalStyle","overlay","backgroundColor","width","height","top","left","padding","modalPhotoStyle","GalleryTarget","fetchUserTodo","fetchUserPosts","fetchUserAlbums","fetchComments","fetchAllPhotos","handleClickOpenPost","post","modalPostActive","commentInThisPost","postSelected","handleClickClosePost","handleClickOpenPhoto","photoId","modalPhotoActive","handleClickClosePhoto","componentWillUnmount","clearUserInfo","clearUserTodo","clearUserPosts","website","isOpen","onRequestClose","shouldCloseOnOverlayClick","ariaHideApp","style","photosSelected","userTodo","todoItem","userId","push","saveUserTodo","postsItem","saveUserPosts","album","saveUserAlbums","User","store","reducers","window","__REDUX_DEVTOOLS_EXTENSION__","App","path","component","params","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9378c54c.chunk.js","sourcesContent":["export default {\r\n    FETCH_USERS: 'FETCH_USERS',\r\n    FETCH_USER_INFO: 'FETCH_USER_INFO'\r\n}","import type from '../Constants/homeConstants'\r\n\r\nconst initialState = () => ({\r\n    usersData: [],\r\n    userInfo: {}\r\n});\r\n\r\nconst setUsersData = (state, usersData) => ({...state, usersData});\r\nconst setUserInfo = (state, userInfo) => ({...state, userInfo});\r\n\r\nexport default (state = initialState(), action) => {\r\n    switch (action.type) {\r\n        case type.FETCH_USERS:\r\n            return setUsersData(state, action.usersData);\r\n        case type.FETCH_USER_INFO:\r\n            return setUserInfo(state, action.userInfo);\r\n        default:\r\n            return state;\r\n    }\r\n};","export default {\r\n    FETCH_USER_TODO: 'FETCH_USER_TODO',\r\n}","import type from '../Constants/todoConstants'\r\n\r\nconst initialState = () => ({\r\n    todoInfo: []\r\n});\r\n\r\nconst setTodoInfo = (state, todoInfo) => ({...state, todoInfo});\r\n\r\nexport default (state = initialState(), action) => {\r\n    switch (action.type) {\r\n        case type.FETCH_USER_TODO:\r\n            return setTodoInfo(state, action.todoInfo);\r\n        default:\r\n            return state;\r\n    }\r\n};","export default {\r\n    FETCH_USERS_POSTS: 'FETCH_USERS_POSTS',\r\n    FETCH_USERS_COMMENTS: 'FETCH_USERS_COMMENTS',\r\n}","import type from '../Constants/postConstants'\r\n\r\nconst initialState = () => ({\r\n    userPosts: [],\r\n    comments: []\r\n});\r\n\r\nconst setUserPost = (state, userPosts) => ({...state, userPosts});\r\nconst setComments = (state, comments) => ({...state, comments});\r\n\r\nexport default (state = initialState(), action) => {\r\n    switch (action.type) {\r\n        case type.FETCH_USERS_POSTS:\r\n            return setUserPost(state, action.userPosts);\r\n        case type.FETCH_USERS_COMMENTS:\r\n            return setComments(state, action.comments);\r\n        default:\r\n            return state;\r\n    }\r\n};","export default {\r\n    FETCH_GALLERY: 'FETCH_GALLERY',\r\n    FETCH_PHOTOS: 'FETCH_PHOTOS'\r\n}","import type from '../Constants/galleryConstants'\r\n\r\nconst initialState = () => ({\r\n    galleryAlbums: [],\r\n    allPhotos: []\r\n});\r\n\r\nconst setGalleryAlbums = (state, galleryAlbums) => ({...state, galleryAlbums});\r\nconst setAllPhotos = (state, allPhotos) => ({...state, allPhotos});\r\n\r\nexport default (state = initialState(), action) => {\r\n    switch (action.type) {\r\n        case type.FETCH_GALLERY:\r\n            return setGalleryAlbums(state, action.galleryAlbums);\r\n        case type.FETCH_PHOTOS:\r\n            return setAllPhotos(state, action.allPhotos);\r\n        default:\r\n            return state;\r\n    }\r\n};","import {combineReducers} from 'redux';\r\nimport homeReducer from '../Reducers/homeReducer'\r\nimport todoReducer from '../Reducers/todoReducer'\r\nimport postReducer from '../Reducers/postReducer'\r\nimport galleryReducer from '../Reducers/galleryReducer'\r\n\r\n\r\nconst reducer = combineReducers({\r\n    homeReducer, todoReducer, postReducer, galleryReducer\r\n});\r\n\r\nexport default reducer","import reducers from '../Reducers/index';\r\nimport { createStore, applyMiddleware, compose }from 'redux';\r\nimport thunk from 'redux-thunk'\r\n\r\n\r\nconst createStoreWithMiddleware = compose(\r\n    applyMiddleware(thunk)\r\n)(createStore);\r\n\r\nexport default function createStorage() {\r\n    return createStoreWithMiddleware(reducers, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n}","import React from 'react';\r\nimport '../../Styles/layout.css'\r\nimport { Link } from \"wouter\";\r\n\r\n\r\nexport default class Header extends React.Component{\r\n\r\nconstructor(props){\r\n    super(props)\r\n    this.state = {\r\n        menu: false\r\n    }\r\n}\r\n\r\nhandleClick = () => {\r\n    this.setState({menu: !this.state.menu})\r\n}\r\n\r\n  render = () => (\r\n    <div className='layout-header'>\r\n        <div className='layout-header__bar'>       \r\n        <Link href=\"/\"><div className=\"layout-logo\">PRUEBA TECNICA ILERNA</div></Link>\r\n        </div>\r\n        \r\n    </div>\r\n\r\n    \r\n    \r\n  )\r\n}\r\n","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport '../../Styles/layout.css'\r\n\r\nexport default class Layout extends React.Component{\r\n\r\n  render = () => (\r\n    <div className='layout-main'>\r\n        <Header />\r\n\r\n        <div>{this.props.children}</div>\r\n    </div>\r\n\r\n    \r\n    \r\n  )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/user_icon.22c31152.png\";","import React from 'react';\r\nimport { Link } from \"wouter\";\r\nimport '../../src/Styles/HomeGallery.css'\r\nimport userIcon from '../Styles/images/user_icon.png'\r\nimport { BiPhoneCall, BiLaptop } from \"react-icons/bi\";\r\n\r\nexport default class UserTarget extends React.Component{\r\n\r\n\r\n  render = () => (\r\n        (!this.props.detailed)\r\n        ?\r\n        <Link href={`/user/${this.props.id}`}><div className='user-target__box' >\r\n            <div className=\"user-target__content\">\r\n                <div className=\"user-target__picture\"><img src={userIcon} className='user-logo'/></div>\r\n                  <div className=\"user-target__body\">\r\n                    <div className=\"user-target__name\">{this.props.name}</div>\r\n                    <div className=\"user-target__mail\">{this.props.email}</div>\r\n                  </div>\r\n                </div>\r\n            </div>\r\n        </Link>\r\n        : <div className='user-target__box-specific' >\r\n        <div className=\"user-target__content\">\r\n            <div className=\"user-target__picture\"><img src={userIcon} className='user-logo'/></div>\r\n            <div className=\"user-target__body\">\r\n              <div className=\"user-target__name\">{this.props.name}</div>\r\n              <div className=\"user-target__mail\">{this.props.email}</div>\r\n              <div className=\"user-target__phone\"><BiPhoneCall className='user-target__icon'/>{this.props.phone}</div>\r\n              <div className=\"user-target__web\"><BiLaptop className='user-target__icon'/>{this.props.web}</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n","import React from 'react';\r\n\r\nimport Layout from '../Layout/Layout'\r\nimport UserTarget from \"../../Components/UserTarget\";\r\nimport '../../Styles/HomeGallery.css'\r\n\r\nexport default class Home extends React.Component{\r\n\r\n  componentDidMount = () => {\r\n    this.props.fetchUsersData()\r\n  }\r\n\r\n  render = () => (\r\n    <Layout>\r\n          <div className=\"home__main\">\r\n            <div className=\"home__tittle\">Users</div> \r\n            <div className=\"home__body\">\r\n              {this.props.usersData.map(user => <UserTarget key={user.id} id={user.id} name={user.name} email={user.email}/>)}\r\n            </div>\r\n          \r\n          </div>\r\n    </Layout>\r\n  )\r\n}\r\n","import axios from 'axios';\r\n\r\nexport function executeServiceCall(actionURL) {\r\n    return axios({\r\n        method: 'GET',\r\n        url: actionURL\r\n    }).then(function (response) {\r\n        return response.data;\r\n    });\r\n}","const PATH = 'https://jsonplaceholder.typicode.com';\r\nexport const PATH_POSTS = `${PATH}/posts` ;\r\nexport const PATH_COMMENTS = `${PATH}/comments`;\r\nexport const PATH_ALBUMS = `${PATH}/albums`;\r\nexport const PATH_PHOTOS = `${PATH}/photos`;\r\nexport const PATH_TODOS = `${PATH}/todos`;\r\nexport const PATH_USERS = `${PATH}/users`;","import {executeServiceCall} from '../service';\r\nimport * as paths from '../callsConstants';\r\n\r\n\r\nexport function getAlbums(callback){\r\n    executeServiceCall(paths.PATH_ALBUMS).then(callback);\r\n}\r\n\r\nexport function getUsers(callback){\r\n    executeServiceCall(paths.PATH_USERS).then(callback);\r\n}\r\n\r\nexport function getTodo(callback){\r\n    executeServiceCall(paths.PATH_TODOS).then(callback);\r\n}\r\n\r\nexport function getPosts(callback){\r\n    executeServiceCall(paths.PATH_POSTS).then(callback);\r\n}\r\n\r\nexport function getComments(callback){\r\n    executeServiceCall(paths.PATH_COMMENTS).then(callback);\r\n}\r\n\r\nexport function getPhotos(callback){\r\n    executeServiceCall(paths.PATH_PHOTOS).then(callback);\r\n}\r\n","import type from '../Constants/homeConstants'\r\nimport {getAlbums, getUsers} from '../Services/servicesCalls/servicesCalls'\r\n\r\n\r\nexport const saveAlbums = (result) => ({\r\n    galleryData: result,\r\n    type: type.FETCH_GALLERY\r\n});\r\n\r\nexport const saveUsers = (result) => ({\r\n    usersData: result,\r\n    type: type.FETCH_USERS\r\n});\r\n\r\nexport const saveUserInfo = (result, id) => {\r\n    const userInfo = result.find(user => user.id === id);\r\n    return ({\r\n        userInfo: userInfo,\r\n        type: type.FETCH_USER_INFO\r\n    });\r\n}\r\n\r\nexport const clearUserInfo = () => ({\r\n    userInfo: {},\r\n    type: type.FETCH_USER_INFO\r\n});\r\n\r\n\r\nexport const fetchGalleryData = () => {\r\n    return dispatch => {\r\n        getAlbums((response) => dispatch(saveAlbums(response)));\r\n    };\r\n};\r\n\r\nexport const fetchUsersData = () => {\r\n    return dispatch => {\r\n        getUsers((response) => dispatch(saveUsers(response)));\r\n    };\r\n};\r\n\r\n\r\nexport const fetchUserInfo = (id) => {\r\n    return dispatch => {\r\n        getUsers((response) => dispatch(saveUserInfo(response, id)));\r\n    };\r\n};","import { connect } from 'react-redux'\r\nimport Home from './Home.js'\r\nimport {fetchUsersData} from '../../Actions/homeAction'\r\n\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    ...state.homeReducer\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    fetchUsersData: () => dispatch(fetchUsersData())\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Home)","import React from 'react';\r\nimport '../../src/Styles/todo.css'\r\n\r\nexport default class Checkbox extends React.Component{\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      isCompleted: this.props.completed\r\n    }\r\n  }\r\n\r\n\r\n\r\n  render = () => (\r\n    <div className=\"user-todo__checkbox\">\r\n        <input type=\"checkbox\" checked={this.state.isCompleted} onChange={() => this.setState({isCompleted: !this.state.isCompleted})}/>\r\n        {\r\n          (this.state.isCompleted)\r\n         ? <div className=\"user-todo__checkbox-text__completed\" onClick={() => this.setState({isCompleted: !this.state.isCompleted})}>{this.props.text}</div>\r\n         : <div className=\"user-todo__checkbox-text\" onClick={() => this.setState({isCompleted: !this.state.isCompleted})}>{this.props.text}</div>\r\n        }\r\n    </div>\r\n    \r\n  )\r\n}","import React from 'react';\r\nimport Checkbox from './Checkbox'\r\nimport '../../src/Styles/todo.css'\r\n\r\nexport default class UserTodo extends React.Component{\r\n\r\n\r\n  render = () => (\r\n    <div className='user-todo__box'>\r\n        <div className='user-todo__title'> To-do list:</div>\r\n        <div className='user-todo__content'>\r\n            {this.props.todoList.map(todo => <Checkbox key={todo.id} text={todo.title} completed={todo.completed} id={todo.id} />) }\r\n            <div className={'clear-space-gray'}/>\r\n        </div>\r\n    </div>\r\n    \r\n  )\r\n}\r\n","import React from 'react';\r\nimport '../../src/Styles/post.css'\r\nimport userIcon from '../Styles/images/user_icon.png'\r\n\r\nexport default class PostLabel extends React.Component{\r\n\r\n\r\n  render = () => (\r\n    <div className='user-post__box' onClick={this.props.onClick}>\r\n        <div className='user-post__image' >\r\n            <img src={userIcon} className='posts-user-logo'/>\r\n        </div>\r\n        <div className='user-post__body' >\r\n            <div  className='user-post__title' >\r\n                {this.props.title}\r\n            </div>\r\n            <div  className='user-post__text'>\r\n                {this.props.content}\r\n            </div>\r\n        </div>\r\n    </div>\r\n    \r\n  )\r\n}","\r\n\r\nexport const getCommentsById = (array, postId) => {\r\n        const arrayComment = array.filter(commentItem => {\r\n           if (commentItem.postId === postId)\r\n               return commentItem\r\n           \r\n       })\r\n       return arrayComment;\r\n}\r\n\r\n\r\nexport const getPhotosById = (array, albumId) => {\r\n        const arrayAlbums = array.filter(photoItem => {\r\n           if (photoItem.albumId === albumId)\r\n                return photoItem\r\n           \r\n       })\r\n       return arrayAlbums;\r\n}\r\n\r\nexport const getSinglePhotoById = (array, photoId) => {\r\n        const arrayPhoto = array.filter(photoItem => {\r\n           if (photoItem.id === photoId)\r\n                return photoItem\r\n       })\r\n       return arrayPhoto[0];\r\n}","import React from 'react';\r\nimport {getPhotosById} from '../utils/lookInArray'\r\nimport '../../src/Styles/gallery.css'\r\n\r\nexport default class UserGallery extends React.Component{\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      photos: []\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps){\r\n    if (prevProps.allPhotos !== this.props.allPhotos){\r\n      if(this.props.list){\r\n        this.setState({photos: getPhotosById(this.props.allPhotos, parseInt(this.props.list[0].id))})\r\n      }\r\n    }\r\n  }\r\n\r\n  handlePhotoList = (id) => {\r\n    this.setState({photos: getPhotosById(this.props.allPhotos, id)})\r\n  }\r\n\r\n  render = () => (\r\n    <div className='user-gallery__box'>\r\n        <div className='user-gallery__header'>\r\n            <div  className='user-gallery__title'>Photobook</div>\r\n            <select className='user-gallery__input' onChange={val => this.handlePhotoList(parseInt(val.target.value))}>\r\n                {this.props.list.map(galleryName => <option key={galleryName.id} value={galleryName.id}>{galleryName.title}</option>)}\r\n            </select>\r\n        </div>\r\n        <div className='user-gallery__body'>\r\n          {this.state.photos.map(photoItem => <img key={photoItem.id} src={photoItem.thumbnailUrl} className=\"user-gallery__photo\" onClick={() => this.props.onClick(parseInt(photoItem.id))}/>)}\r\n          <div className={'clear-space-gray'}/>\r\n        </div>\r\n    </div>\r\n    \r\n  )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/user_icon_2.c543c8fb.png\";","import React from 'react';\r\nimport userIcon from '../../Styles/images/user_icon_2.png'\r\nimport '../../Styles/modal.css'\r\n\r\nexport default class AnswerComment extends React.Component{     \r\n \r\n  render = () => \r\n    <div className=\"answer-comment__body\">\r\n        <div className=\"answer-comment__text\">\r\n            <div className=\"answer-comment__title\">{this.props.title}</div>\r\n            <div className=\"answer-comment__answer\">{this.props.message}</div>\r\n            <div className=\"answer-comment__mail\">{this.props.mail}</div>\r\n        </div>\r\n        <div className=\"answer-comment__logo\"><img className=\"answer-comment__logoImage\" src={userIcon} /></div>\r\n    </div>\r\n    \r\n  \r\n}","import React from 'react';\r\nimport userIcon from '../../Styles/images/user_icon.png'\r\nimport AnswerComment from './AnswerComment'\r\nimport '../../Styles/modal.css'\r\n\r\nexport default class ModalPost extends React.Component{     \r\n \r\n  render = () => \r\n    (this.props.active) &&\r\n    <div className='modal-post__body'>\r\n        <div className='modal-post__main-answer'>\r\n          <div  className='modal-post__main-answer_logo'><img src={userIcon} className='modal-post__user-logo'/></div>\r\n          <div  className='modal-post__main-answer_content'>\r\n            <div  className='modal-post__main-answer_title'>{this.props.title}</div>\r\n            <div  className='modal-post__main-answer_text'>{this.props.content}</div>\r\n          </div>\r\n        </div>\r\n        <div className='modal-post__comments'>\r\n          {this.props.comments.map(commentItem => <AnswerComment key={commentItem.id} title={commentItem.name} message={commentItem.body} mail={commentItem.email}/>)}\r\n        </div>\r\n        <div className={'clear-space'}/>\r\n    </div>\r\n    \r\n  \r\n}","import React from 'react';\r\nimport '../../Styles/modal.css'\r\n\r\nexport default class ModalPost extends React.Component{     \r\n \r\n  render = () => \r\n    <div className='modal-photo__box'>\r\n        <img src={this.props.photoSelected.url}/>\r\n        <div className='modal-photo__title'>{this.props.photoSelected.title}</div>\r\n    </div>\r\n    \r\n  \r\n}","export const modalStyle = {\r\n    overlay: {\r\n      backgroundColor: 'rgba(150, 150, 150, 0.5)'\r\n    },\r\n    content: {\r\n      width: '50%',\r\n      height: 'auto',\r\n      top: '15%',\r\n      left: '21%',\r\n      padding: 0\r\n    }\r\n  }\r\n\r\n  export const modalPhotoStyle = {\r\n    overlay: {\r\n      backgroundColor: 'rgba(150, 150, 150, 0.5)'\r\n    },\r\n    content: {\r\n      width: '32%',\r\n      height: '65%',\r\n      top: '15%',\r\n      left: '30%',\r\n      padding: 0\r\n    }\r\n  }","import React from 'react';\r\nimport Layout from '../Layout/Layout'\r\nimport ReactModal from 'react-modal';\r\n\r\nimport UserTarget from \"../../Components/UserTarget\";\r\nimport UserTodo from \"../../Components/UserTodo\";\r\nimport PostLabel from '../../Components/PostLabel';\r\nimport UserGallery from '../../Components/UserGallery'\r\nimport ModalPost from '../../Components/Modal/ModalPost';\r\nimport ModalPhoto from '../../Components/Modal/ModalPhoto'\r\nimport {modalStyle, modalPhotoStyle} from '../../utils/modalStyle.js'\r\nimport {getCommentsById, getSinglePhotoById} from '../../utils/lookInArray'\r\nimport '../../Styles/user.css'\r\n\r\nexport default class GalleryTarget extends React.Component{\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      modalPostActive: false,\r\n      modalPhotoActive: false,\r\n      commentInThisPost: [],\r\n      photosSelected: [],\r\n      postSelected: {},\r\n      photoSelected: {}\r\n    }\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.props.fetchUserInfo(this.props.id)\r\n    this.props.fetchUserTodo(this.props.id)\r\n    this.props.fetchUserPosts(this.props.id)\r\n    this.props.fetchUserAlbums(this.props.id)\r\n    this.props.fetchComments()\r\n    this.props.fetchAllPhotos()\r\n  }\r\n\r\n  handleClickOpenPost = (postId, post) => {\r\n    this.setState({modalPostActive: true,\r\n                   commentInThisPost: getCommentsById(this.props.comments, postId),\r\n                   postSelected: post})\r\n  }\r\n\r\n  handleClickClosePost = () => {\r\n    this.setState({modalPostActive: false,\r\n                   commentInThisPost: [],\r\n                   postSelected: {}})\r\n  }\r\n\r\n  handleClickOpenPhoto = (id) => {\r\n    this.setState({modalPhotoActive: true,\r\n                   photoSelected: getSinglePhotoById(this.props.allPhotos, id)})\r\n  }\r\n\r\n  handleClickClosePhoto = () => {\r\n    this.setState({modalPhotoActive: false,\r\n                   photoSelected: {}})\r\n  }\r\n\r\n\r\n  componentWillUnmount = () => {\r\n    this.props.clearUserInfo()\r\n    this.props.clearUserTodo()\r\n    this.props.clearUserPosts()\r\n  }\r\n\r\n  render = () => (\r\n    <Layout>\r\n        <div className='user__main'>\r\n          <div className='user-panel__left'>\r\n            <div className='user-panel__profile'>\r\n              <UserTarget \r\n                id={this.props.userInfo.id} \r\n                name={this.props.userInfo.name} \r\n                email={this.props.userInfo.email} \r\n                phone={this.props.userInfo.phone} \r\n                web={this.props.userInfo.website} \r\n                detailed\r\n              />\r\n            </div>\r\n            <div className='user-panel__todo'>\r\n              {(this.props.todoInfo) && <UserTodo todoList={this.props.todoInfo}/>}\r\n            </div>\r\n          </div>\r\n            <div className='user-panel__middle'>\r\n            {(this.props.userPosts) && this.props.userPosts.map(post => \r\n                <PostLabel \r\n                    key={post.id} \r\n                    title={post.title} \r\n                    content={post.body} \r\n                    postId={post.id} \r\n                    onClick={() => this.handleClickOpenPost(post.id, {title: post.title, content: post.body})}\r\n                />\r\n            )}\r\n            \r\n            <ReactModal \r\n            isOpen={this.state.modalPostActive}\r\n            onRequestClose={this.handleClickClosePost}\r\n            shouldCloseOnOverlayClick={true}\r\n            ariaHideApp={false}\r\n            style={modalStyle}>\r\n              <ModalPost active={this.state.modalPostActive} \r\n                comments={this.state.commentInThisPost} \r\n                title={this.state.postSelected.title} \r\n                content={this.state.postSelected.content}/>\r\n            </ReactModal>\r\n            <div className={'clear-space'}/>\r\n            </div>\r\n          <div className='user-panel__right'>\r\n            <UserGallery \r\n              allPhotos={this.props.allPhotos} \r\n              list={this.props.galleryAlbums} \r\n              onClick={(id) => this.handleClickOpenPhoto(id)} \r\n            />\r\n            <ReactModal \r\n            isOpen={this.state.modalPhotoActive}\r\n            onRequestClose={this.handleClickClosePhoto}\r\n            shouldCloseOnOverlayClick={true}\r\n            ariaHideApp={false}\r\n            style={modalPhotoStyle}>\r\n              <ModalPhoto photoSelected={this.state.photoSelected}/>\r\n            </ReactModal>\r\n          </div>\r\n        </div>\r\n    </Layout>\r\n  )\r\n}\r\n","import type from '../Constants/todoConstants'\r\nimport {getTodo} from '../Services/servicesCalls/servicesCalls'\r\n\r\nexport const saveUserTodo = (result, id) => {\r\n    const userTodo = []\r\n    result.map(todoItem => {\r\n        if (todoItem.userId === id)\r\n        userTodo.push(todoItem)\r\n    })\r\n    return ({\r\n        todoInfo: userTodo,\r\n        type: type.FETCH_USER_TODO\r\n    });\r\n}\r\n\r\nexport const clearUserTodo = () => ({\r\n    todoInfo: [],\r\n    type: type.FETCH_USER_TODO\r\n});\r\n\r\n\r\nexport const fetchUserTodo = (id) => {\r\n    return dispatch => {\r\n        getTodo((response) => dispatch(saveUserTodo(response, id)));\r\n    };\r\n};","import type from '../Constants/postConstants'\r\nimport {getPosts, getComments} from '../Services/servicesCalls/servicesCalls'\r\n\r\n\r\nexport const saveComments = (result) => ({\r\n    comments: result,\r\n    type: type.FETCH_USERS_COMMENTS\r\n});\r\n\r\nexport const clearUserPosts = () => ({\r\n    userPosts: [],\r\n    type: type.FETCH_USERS_POSTS\r\n});\r\n\r\nexport const saveUserPosts = (result, id) => {\r\n    const userPosts = []\r\n    result.map(postsItem => {\r\n        if (postsItem.userId === id)\r\n        userPosts.push(postsItem)\r\n    })\r\n    return ({\r\n        userPosts: userPosts,\r\n        type: type.FETCH_USERS_POSTS\r\n    });\r\n}\r\n\r\n\r\nexport const fetchUserPosts = (id) => {\r\n    return dispatch => {\r\n        getPosts((response) => dispatch(saveUserPosts(response, id)));\r\n    };\r\n};\r\n\r\nexport const fetchComments = () => {\r\n    return dispatch => {\r\n        getComments((response) => dispatch(saveComments(response)));\r\n    };\r\n};","import type from '../Constants/galleryConstants'\r\nimport {getAlbums, getPhotos} from '../Services/servicesCalls/servicesCalls'\r\n\r\n\r\nexport const saveUserAlbums = (result, id) => {\r\n    const userAlbums = result.filter(album => album.userId === id)\r\n    return ({\r\n        galleryAlbums: userAlbums,\r\n        type: type.FETCH_GALLERY\r\n    });\r\n}\r\n\r\nexport const saveAllPhotos = (result) => ({\r\n    allPhotos: result,\r\n    type: type.FETCH_PHOTOS\r\n});\r\n\r\n\r\n\r\nexport const fetchUserAlbums = (id) => {\r\n    return dispatch => {\r\n        getAlbums((response) => dispatch(saveUserAlbums(response, id)));\r\n    };\r\n};\r\n\r\nexport const fetchAllPhotos = () => {\r\n    return dispatch => {\r\n        getPhotos((response) => dispatch(saveAllPhotos(response)));\r\n    };\r\n};\r\n","import { connect } from 'react-redux'\r\nimport User from './User'\r\nimport { fetchUserInfo, clearUserInfo } from \"../../Actions/homeAction\";\r\nimport { fetchUserTodo, clearUserTodo } from \"../../Actions/todoAction\";\r\nimport { fetchUserPosts, clearUserPosts,  fetchComments } from \"../../Actions/postsAction\";\r\nimport { fetchUserAlbums, fetchAllPhotos } from \"../../Actions/galleryAction\";\r\n\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    ...state.homeReducer, ...state.todoReducer, ...state.postReducer, ...state.galleryReducer\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    fetchUserInfo: (id) => dispatch(fetchUserInfo(id)),\r\n    fetchUserTodo: (id) => dispatch(fetchUserTodo(id)),\r\n    fetchUserPosts: (id) => dispatch(fetchUserPosts(id)),\r\n    fetchUserAlbums: (id) => dispatch(fetchUserAlbums(id)),\r\n    fetchAllPhotos: () => dispatch(fetchAllPhotos()),\r\n    fetchComments: () => dispatch(fetchComments()),\r\n    clearUserInfo: () => dispatch(clearUserInfo()),\r\n    clearUserTodo: () => dispatch(clearUserTodo()),\r\n    clearUserPosts: () => dispatch(clearUserPosts()),\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(User)","import React from 'react';\r\nimport { Provider } from 'react-redux'\r\nimport { Route } from \"wouter\";\r\n\r\nimport createStorage from \"./Store/configureStore.js\";\r\nimport Home from './Containers/Home/index';\r\nimport User from './Containers/User/index'\r\nimport './Styles/App.css'\r\n\r\nlet store = createStorage();\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <Route path=\"/\" component={Home} />\r\n      <Route path=\"/user/:id\">{(params) => <User id={parseInt(params.id)}/>}</Route>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}